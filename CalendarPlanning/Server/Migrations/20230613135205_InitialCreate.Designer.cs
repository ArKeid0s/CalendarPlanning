// <auto-generated />
using System;
using CalendarPlanning.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CalendarPlanning.Server.Migrations
{
    [DbContext(typeof(APIDbContext))]
    [Migration("20230613135205_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.4.23259.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CalendarPlanning.Shared.Models.Employee", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EmployeeId");

                    b.HasIndex("StoreId");

                    b.ToTable("Employees", "dbo");
                });

            modelBuilder.Entity("CalendarPlanning.Shared.Models.Holiday", b =>
                {
                    b.Property<Guid>("HolidayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("HolidayId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Holidays", "dbo");
                });

            modelBuilder.Entity("CalendarPlanning.Shared.Models.Incentive", b =>
                {
                    b.Property<Guid>("IncentiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClientFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClientLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncentiveProgressive")
                        .HasColumnType("int");

                    b.Property<int>("IncentiveUnifocal")
                        .HasColumnType("int");

                    b.HasKey("IncentiveId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Incentives", "dbo");
                });

            modelBuilder.Entity("CalendarPlanning.Shared.Models.Shift", b =>
                {
                    b.Property<Guid>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("HourEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("HourStart")
                        .HasColumnType("datetime");

                    b.Property<int>("ShiftType")
                        .HasColumnType("int");

                    b.HasKey("ShiftId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Shifts", "dbo");
                });

            modelBuilder.Entity("CalendarPlanning.Shared.Models.Store", b =>
                {
                    b.Property<Guid>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StoreId");

                    b.ToTable("Stores", "dbo");
                });

            modelBuilder.Entity("CalendarPlanning.Shared.Models.Employee", b =>
                {
                    b.HasOne("CalendarPlanning.Shared.Models.Store", "Store")
                        .WithMany("Employees")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("CalendarPlanning.Shared.Models.Holiday", b =>
                {
                    b.HasOne("CalendarPlanning.Shared.Models.Employee", "Employee")
                        .WithMany("Holidays")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CalendarPlanning.Shared.Models.Incentive", b =>
                {
                    b.HasOne("CalendarPlanning.Shared.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CalendarPlanning.Shared.Models.Shift", b =>
                {
                    b.HasOne("CalendarPlanning.Shared.Models.Employee", null)
                        .WithMany("Shifts")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("CalendarPlanning.Shared.Models.Employee", b =>
                {
                    b.Navigation("Holidays");

                    b.Navigation("Shifts");
                });

            modelBuilder.Entity("CalendarPlanning.Shared.Models.Store", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
