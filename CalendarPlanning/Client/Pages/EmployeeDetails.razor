@page "/employees/{EmployeeId}"

@using CalendarPlanning.Shared.Models.DTO;
@using Microsoft.AspNetCore.Components.QuickGrid;
@inject HttpClient Http

<h3>Employee Details for Employee with Id @EmployeeId</h3>

@if (isForbidden)
{
    <p>You are not authorized to view this page.</p>
}
else if (isLoading)
{
    <p><em>Loading...</em></p>
}
else if (employee is null)
{
    <p>Error fetching employee details.</p>
}
else
{
    <p>@employee.FirstName @employee.LastName @employee.StoreName @employee.StoreAddress</p>
}

@code {
    private EmployeeDto? employee;
    private bool isLoading = true;
    private bool isForbidden = false;

    [Parameter]
    public string EmployeeId { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await Http.GetAsync($"api/Employees/{EmployeeId}");

            isLoading = false;

            if (response.IsSuccessStatusCode)
            {
                employee = await response.Content.ReadFromJsonAsync<EmployeeDto>();
            }
            else if (!response.IsSuccessStatusCode)
            {
                isForbidden = true;
            }
            else
            {
                // handle other possible status codes here
                throw new Exception("Error fetching employee details.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
}
